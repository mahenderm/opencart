
package com.ctl.ecaps.service.account;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import com.ctl.ecaps.serviceobject.AccountDetailSO;
import com.ctl.ecaps.serviceobject.AccountMappingSO;
import com.ctl.ecaps.serviceobject.AccountRefSO;
import com.ctl.ecaps.serviceobject.AccountRequestSO;
import com.ctl.ecaps.serviceobject.AccountResponseSO;
import com.ctl.ecaps.serviceobject.AccountStatusSO;
import com.ctl.ecaps.serviceobject.DiscountGroupSO;
import com.ctl.ecaps.serviceobject.EntitledAccountResponseSO;
import com.ctl.ecaps.serviceobject.RegAccountStatusSO;
import com.ctl.ecaps.serviceobject.WhslAcctAttributeSO;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "AccountService", targetNamespace = "http://ecaps.ctl.com/service/account")
@XmlSeeAlso({
    com.ctl.ecaps.exceptions.ObjectFactory.class,
    com.ctl.ecaps.service.account.ObjectFactory.class,
    com.ctl.ecaps.serviceobject.ObjectFactory.class
})
public interface AccountService {


    /**
     * 
     * @param accountId
     * @param accountSystemCode
     * @param allowInactive
     * @param enterpriseId
     * @throws ServiceAuthenticationException
     * @throws ServiceValidationException
     * @throws ServiceSystemException
     */
    @WebMethod
    @RequestWrapper(localName = "assignAccountToEnterprise", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.AssignAccountToEnterprise")
    @ResponseWrapper(localName = "assignAccountToEnterpriseResponse", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.AssignAccountToEnterpriseResponse")
    public void assignAccountToEnterprise(
        @WebParam(name = "enterpriseId", targetNamespace = "http://ecaps.ctl.com/service/account")
        long enterpriseId,
        @WebParam(name = "accountId", targetNamespace = "http://ecaps.ctl.com/service/account")
        String accountId,
        @WebParam(name = "accountSystemCode", targetNamespace = "http://ecaps.ctl.com/service/account")
        String accountSystemCode,
        @WebParam(name = "allowInactive", targetNamespace = "http://ecaps.ctl.com/service/account")
        boolean allowInactive)
        throws ServiceAuthenticationException, ServiceSystemException, ServiceValidationException
    ;

    /**
     * 
     * @param discountGroupType
     * @param enterpriseId
     * @param username
     * @return
     *     returns java.util.List<com.ctl.ecaps.serviceobject.DiscountGroupSO>
     * @throws ServiceValidationException
     * @throws ServiceSystemException
     */
    @WebMethod
    @WebResult(targetNamespace = "http://ecaps.ctl.com/service/account")
    @RequestWrapper(localName = "getDiscountGroupsByUsername", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.GetDiscountGroupsByUsername")
    @ResponseWrapper(localName = "getDiscountGroupsByUsernameResponse", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.GetDiscountGroupsByUsernameResponse")
    public List<DiscountGroupSO> getDiscountGroupsByUsername(
        @WebParam(name = "username", targetNamespace = "http://ecaps.ctl.com/service/account")
        String username,
        @WebParam(name = "enterpriseId", targetNamespace = "http://ecaps.ctl.com/service/account")
        long enterpriseId,
        @WebParam(name = "discountGroupType", targetNamespace = "http://ecaps.ctl.com/service/account")
        List<String> discountGroupType)
        throws ServiceSystemException, ServiceValidationException
    ;

    /**
     * 
     * @param accountId
     * @param accountSystemCode
     * @param userIds
     * @throws ServiceAuthenticationException
     * @throws ServiceValidationException
     * @throws ServiceSystemException
     */
    @WebMethod
    @RequestWrapper(localName = "assignAccountToUsers", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.AssignAccountToUsers")
    @ResponseWrapper(localName = "assignAccountToUsersResponse", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.AssignAccountToUsersResponse")
    public void assignAccountToUsers(
        @WebParam(name = "accountId", targetNamespace = "http://ecaps.ctl.com/service/account")
        String accountId,
        @WebParam(name = "accountSystemCode", targetNamespace = "http://ecaps.ctl.com/service/account")
        String accountSystemCode,
        @WebParam(name = "userIds", targetNamespace = "http://ecaps.ctl.com/service/account")
        List<Long> userIds)
        throws ServiceAuthenticationException, ServiceSystemException, ServiceValidationException
    ;

    /**
     * 
     * @param accountId
     * @param accountSystemCode
     * @param userId
     * @throws ServiceAuthenticationException
     * @throws ServiceValidationException
     * @throws ServiceSystemException
     */
    @WebMethod
    @RequestWrapper(localName = "assignAccountToUser", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.AssignAccountToUser")
    @ResponseWrapper(localName = "assignAccountToUserResponse", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.AssignAccountToUserResponse")
    public void assignAccountToUser(
        @WebParam(name = "userId", targetNamespace = "http://ecaps.ctl.com/service/account")
        long userId,
        @WebParam(name = "accountId", targetNamespace = "http://ecaps.ctl.com/service/account")
        String accountId,
        @WebParam(name = "accountSystemCode", targetNamespace = "http://ecaps.ctl.com/service/account")
        String accountSystemCode)
        throws ServiceAuthenticationException, ServiceSystemException, ServiceValidationException
    ;

    /**
     * 
     * @param accountId
     * @param aliasName
     * @param accountSystemCode
     * @throws ServiceAuthenticationException
     * @throws ServiceValidationException
     * @throws ServiceSystemException
     */
    @WebMethod
    @RequestWrapper(localName = "updateAccountAlias", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.UpdateAccountAlias")
    @ResponseWrapper(localName = "updateAccountAliasResponse", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.UpdateAccountAliasResponse")
    public void updateAccountAlias(
        @WebParam(name = "accountId", targetNamespace = "http://ecaps.ctl.com/service/account")
        String accountId,
        @WebParam(name = "accountSystemCode", targetNamespace = "http://ecaps.ctl.com/service/account")
        String accountSystemCode,
        @WebParam(name = "aliasName", targetNamespace = "http://ecaps.ctl.com/service/account")
        String aliasName)
        throws ServiceAuthenticationException, ServiceSystemException, ServiceValidationException
    ;

    /**
     * 
     * @param enterpriseId
     * @param userId
     * @return
     *     returns java.util.List<com.ctl.ecaps.serviceobject.AccountMappingSO>
     * @throws ServiceValidationException
     * @throws ServiceSystemException
     */
    @WebMethod
    @WebResult(targetNamespace = "http://ecaps.ctl.com/service/account")
    @RequestWrapper(localName = "getAccountMapping", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.GetAccountMapping")
    @ResponseWrapper(localName = "getAccountMappingResponse", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.GetAccountMappingResponse")
    public List<AccountMappingSO> getAccountMapping(
        @WebParam(name = "userId", targetNamespace = "http://ecaps.ctl.com/service/account")
        long userId,
        @WebParam(name = "enterpriseId", targetNamespace = "http://ecaps.ctl.com/service/account")
        long enterpriseId)
        throws ServiceSystemException, ServiceValidationException
    ;

    /**
     * 
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "http://ecaps.ctl.com/service/account")
    @RequestWrapper(localName = "ping", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.Ping")
    @ResponseWrapper(localName = "pingResponse", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.PingResponse")
    public boolean ping();

    /**
     * 
     * @param accountRequest
     * @return
     *     returns com.ctl.ecaps.serviceobject.AccountResponseSO
     * @throws ServiceValidationException
     * @throws ServiceSystemException
     */
    @WebMethod
    @WebResult(targetNamespace = "http://ecaps.ctl.com/service/account")
    @RequestWrapper(localName = "getAccounts", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.GetAccounts")
    @ResponseWrapper(localName = "getAccountsResponse", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.GetAccountsResponse")
    public AccountResponseSO getAccounts(
        @WebParam(name = "accountRequest", targetNamespace = "http://ecaps.ctl.com/service/account")
        AccountRequestSO accountRequest)
        throws ServiceSystemException, ServiceValidationException
    ;

    /**
     * 
     * @param accountId
     * @param accountSystemCode
     * @param enterpriseId
     * @param userId
     * @return
     *     returns com.ctl.ecaps.serviceobject.EntitledAccountResponseSO
     * @throws ServiceValidationException
     * @throws ServiceSystemException
     */
    @WebMethod
    @WebResult(targetNamespace = "http://ecaps.ctl.com/service/account")
    @RequestWrapper(localName = "getEntitledAccounts", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.GetEntitledAccounts")
    @ResponseWrapper(localName = "getEntitledAccountsResponse", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.GetEntitledAccountsResponse")
    public EntitledAccountResponseSO getEntitledAccounts(
        @WebParam(name = "enterpriseId", targetNamespace = "http://ecaps.ctl.com/service/account")
        long enterpriseId,
        @WebParam(name = "userId", targetNamespace = "http://ecaps.ctl.com/service/account")
        Long userId,
        @WebParam(name = "accountId", targetNamespace = "http://ecaps.ctl.com/service/account")
        String accountId,
        @WebParam(name = "accountSystemCode", targetNamespace = "http://ecaps.ctl.com/service/account")
        String accountSystemCode)
        throws ServiceSystemException, ServiceValidationException
    ;

    /**
     * 
     * @param accountId
     * @param accountSystemCode
     * @return
     *     returns com.ctl.ecaps.serviceobject.WhslAcctAttributeSO
     * @throws ServiceValidationException
     */
    @WebMethod
    @WebResult(targetNamespace = "http://ecaps.ctl.com/service/account")
    @RequestWrapper(localName = "getWholesaleData", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.GetWholesaleData")
    @ResponseWrapper(localName = "getWholesaleDataResponse", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.GetWholesaleDataResponse")
    public WhslAcctAttributeSO getWholesaleData(
        @WebParam(name = "accountId", targetNamespace = "http://ecaps.ctl.com/service/account")
        String accountId,
        @WebParam(name = "accountSystemCode", targetNamespace = "http://ecaps.ctl.com/service/account")
        String accountSystemCode)
        throws ServiceValidationException
    ;

    /**
     * 
     * @param accountId
     * @param accountSystemCode
     * @param marketingIndicator
     * @throws ServiceAuthenticationException
     * @throws ServiceSystemException
     */
    @WebMethod
    @RequestWrapper(localName = "updateAccountMarketingIndicator", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.UpdateAccountMarketingIndicator")
    @ResponseWrapper(localName = "updateAccountMarketingIndicatorResponse", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.UpdateAccountMarketingIndicatorResponse")
    public void updateAccountMarketingIndicator(
        @WebParam(name = "accountId", targetNamespace = "http://ecaps.ctl.com/service/account")
        String accountId,
        @WebParam(name = "accountSystemCode", targetNamespace = "http://ecaps.ctl.com/service/account")
        String accountSystemCode,
        @WebParam(name = "marketingIndicator", targetNamespace = "http://ecaps.ctl.com/service/account")
        boolean marketingIndicator)
        throws ServiceAuthenticationException, ServiceSystemException
    ;

    /**
     * 
     * @param enterpriseId
     * @param accounts
     * @return
     *     returns java.util.List<com.ctl.ecaps.serviceobject.RegAccountStatusSO>
     * @throws ServiceAuthenticationException
     * @throws ServiceValidationException
     * @throws ServiceAuthorizationException
     * @throws ServiceSystemException
     */
    @WebMethod
    @WebResult(targetNamespace = "http://ecaps.ctl.com/service/account")
    @RequestWrapper(localName = "assignAccountsOrGroupsToEnterprise", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.AssignAccountsOrGroupsToEnterprise")
    @ResponseWrapper(localName = "assignAccountsOrGroupsToEnterpriseResponse", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.AssignAccountsOrGroupsToEnterpriseResponse")
    public List<RegAccountStatusSO> assignAccountsOrGroupsToEnterprise(
        @WebParam(name = "enterpriseId", targetNamespace = "http://ecaps.ctl.com/service/account")
        long enterpriseId,
        @WebParam(name = "accounts", targetNamespace = "http://ecaps.ctl.com/service/account")
        List<AccountRefSO> accounts)
        throws ServiceAuthenticationException, ServiceAuthorizationException, ServiceSystemException, ServiceValidationException
    ;

    /**
     * 
     * @param accountId
     * @param accountSystemCode
     * @return
     *     returns com.ctl.ecaps.serviceobject.AccountDetailSO
     * @throws ServiceValidationException
     * @throws ServiceSystemException
     */
    @WebMethod
    @WebResult(targetNamespace = "http://ecaps.ctl.com/service/account")
    @RequestWrapper(localName = "getAccountDetailById", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.GetAccountDetailById")
    @ResponseWrapper(localName = "getAccountDetailByIdResponse", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.GetAccountDetailByIdResponse")
    public AccountDetailSO getAccountDetailById(
        @WebParam(name = "accountId", targetNamespace = "http://ecaps.ctl.com/service/account")
        String accountId,
        @WebParam(name = "accountSystemCode", targetNamespace = "http://ecaps.ctl.com/service/account")
        String accountSystemCode)
        throws ServiceSystemException, ServiceValidationException
    ;

    /**
     * 
     * @param accounts
     * @param userId
     * @return
     *     returns java.util.List<com.ctl.ecaps.serviceobject.RegAccountStatusSO>
     * @throws ServiceAuthenticationException
     * @throws ServiceValidationException
     * @throws ServiceAuthorizationException
     * @throws ServiceSystemException
     */
    @WebMethod
    @WebResult(targetNamespace = "http://ecaps.ctl.com/service/account")
    @RequestWrapper(localName = "assignAccountsToUser", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.AssignAccountsToUser")
    @ResponseWrapper(localName = "assignAccountsToUserResponse", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.AssignAccountsToUserResponse")
    public List<RegAccountStatusSO> assignAccountsToUser(
        @WebParam(name = "userId", targetNamespace = "http://ecaps.ctl.com/service/account")
        long userId,
        @WebParam(name = "accounts", targetNamespace = "http://ecaps.ctl.com/service/account")
        List<AccountRefSO> accounts)
        throws ServiceAuthenticationException, ServiceAuthorizationException, ServiceSystemException, ServiceValidationException
    ;

    /**
     * 
     * @param accountId
     * @param accountSystemCode
     * @param allowInactive
     * @param enterpriseId
     * @throws ServiceAuthenticationException
     * @throws ServiceValidationException
     * @throws ServiceSystemException
     */
    @WebMethod
    @RequestWrapper(localName = "assignAccountToEnterpriseWithLookup", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.AssignAccountToEnterpriseWithLookup")
    @ResponseWrapper(localName = "assignAccountToEnterpriseWithLookupResponse", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.AssignAccountToEnterpriseWithLookupResponse")
    public void assignAccountToEnterpriseWithLookup(
        @WebParam(name = "enterpriseId", targetNamespace = "http://ecaps.ctl.com/service/account")
        long enterpriseId,
        @WebParam(name = "accountId", targetNamespace = "http://ecaps.ctl.com/service/account")
        String accountId,
        @WebParam(name = "accountSystemCode", targetNamespace = "http://ecaps.ctl.com/service/account")
        String accountSystemCode,
        @WebParam(name = "allowInactive", targetNamespace = "http://ecaps.ctl.com/service/account")
        boolean allowInactive)
        throws ServiceAuthenticationException, ServiceSystemException, ServiceValidationException
    ;

    /**
     * 
     * @param accountId
     * @param accountSystemCode
     * @param userId
     * @throws ServiceAuthenticationException
     * @throws ServiceValidationException
     * @throws ServiceSystemException
     */
    @WebMethod
    @RequestWrapper(localName = "removeAccountFromUser", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.RemoveAccountFromUser")
    @ResponseWrapper(localName = "removeAccountFromUserResponse", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.RemoveAccountFromUserResponse")
    public void removeAccountFromUser(
        @WebParam(name = "userId", targetNamespace = "http://ecaps.ctl.com/service/account")
        long userId,
        @WebParam(name = "accountId", targetNamespace = "http://ecaps.ctl.com/service/account")
        String accountId,
        @WebParam(name = "accountSystemCode", targetNamespace = "http://ecaps.ctl.com/service/account")
        String accountSystemCode)
        throws ServiceAuthenticationException, ServiceSystemException, ServiceValidationException
    ;

    /**
     * 
     * @param accountIds
     * @param accountSystemCode
     * @param enterpriseId
     * @param enterpriseChannelCode
     * @return
     *     returns java.util.List<com.ctl.ecaps.serviceobject.AccountStatusSO>
     * @throws ServiceValidationException
     * @throws ServiceSystemException
     */
    @WebMethod
    @WebResult(targetNamespace = "http://ecaps.ctl.com/service/account")
    @RequestWrapper(localName = "checkAccountStatus", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.CheckAccountStatus")
    @ResponseWrapper(localName = "checkAccountStatusResponse", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.CheckAccountStatusResponse")
    public List<AccountStatusSO> checkAccountStatus(
        @WebParam(name = "accountIds", targetNamespace = "http://ecaps.ctl.com/service/account")
        List<String> accountIds,
        @WebParam(name = "accountSystemCode", targetNamespace = "http://ecaps.ctl.com/service/account")
        String accountSystemCode,
        @WebParam(name = "enterpriseId", targetNamespace = "http://ecaps.ctl.com/service/account")
        Long enterpriseId,
        @WebParam(name = "enterpriseChannelCode", targetNamespace = "http://ecaps.ctl.com/service/account")
        String enterpriseChannelCode)
        throws ServiceSystemException, ServiceValidationException
    ;

    /**
     * 
     * @param enterpriseId
     * @return
     *     returns java.util.List<com.ctl.ecaps.serviceobject.WhslAcctAttributeSO>
     * @throws ServiceValidationException
     * @throws ServiceSystemException
     */
    @WebMethod
    @WebResult(targetNamespace = "http://ecaps.ctl.com/service/account")
    @RequestWrapper(localName = "getWholesaleDataByEnterprise", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.GetWholesaleDataByEnterprise")
    @ResponseWrapper(localName = "getWholesaleDataByEnterpriseResponse", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.GetWholesaleDataByEnterpriseResponse")
    public List<WhslAcctAttributeSO> getWholesaleDataByEnterprise(
        @WebParam(name = "enterpriseId", targetNamespace = "http://ecaps.ctl.com/service/account")
        long enterpriseId)
        throws ServiceSystemException, ServiceValidationException
    ;

    /**
     * 
     * @param accountId
     * @param accountSystemCode
     * @param enterpriseId
     * @throws ServiceAuthenticationException
     * @throws ServiceValidationException
     * @throws ServiceSystemException
     */
    @WebMethod
    @RequestWrapper(localName = "removeAccountFromEnterprise", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.RemoveAccountFromEnterprise")
    @ResponseWrapper(localName = "removeAccountFromEnterpriseResponse", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.RemoveAccountFromEnterpriseResponse")
    public void removeAccountFromEnterprise(
        @WebParam(name = "enterpriseId", targetNamespace = "http://ecaps.ctl.com/service/account")
        long enterpriseId,
        @WebParam(name = "accountId", targetNamespace = "http://ecaps.ctl.com/service/account")
        String accountId,
        @WebParam(name = "accountSystemCode", targetNamespace = "http://ecaps.ctl.com/service/account")
        String accountSystemCode)
        throws ServiceAuthenticationException, ServiceSystemException, ServiceValidationException
    ;

    /**
     * 
     * @param discountGroupType
     * @param enterpriseId
     * @return
     *     returns java.util.List<com.ctl.ecaps.serviceobject.DiscountGroupSO>
     * @throws ServiceValidationException
     * @throws ServiceSystemException
     */
    @WebMethod
    @WebResult(targetNamespace = "http://ecaps.ctl.com/service/account")
    @RequestWrapper(localName = "getDiscountGroupsByEnterprise", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.GetDiscountGroupsByEnterprise")
    @ResponseWrapper(localName = "getDiscountGroupsByEnterpriseResponse", targetNamespace = "http://ecaps.ctl.com/service/account", className = "com.ctl.ecaps.service.account.GetDiscountGroupsByEnterpriseResponse")
    public List<DiscountGroupSO> getDiscountGroupsByEnterprise(
        @WebParam(name = "enterpriseId", targetNamespace = "http://ecaps.ctl.com/service/account")
        long enterpriseId,
        @WebParam(name = "discountGroupType", targetNamespace = "http://ecaps.ctl.com/service/account")
        List<String> discountGroupType)
        throws ServiceSystemException, ServiceValidationException
    ;

}
