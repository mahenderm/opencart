
package com.ctl.ecaps.service.useradmin;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import com.ctl.ecaps.serviceobject.EnterpriseAliasSO;
import com.ctl.ecaps.serviceobject.EnterpriseSO;
import com.ctl.ecaps.serviceobject.UserCheckRequestSO;
import com.ctl.ecaps.serviceobject.UserDetailSO;
import com.ctl.ecaps.serviceobject.UserEnterpriseDataSO;
import com.ctl.ecaps.serviceobject.UserFilterCriteriaSO;
import com.ctl.ecaps.serviceobject.UserInfoSO;
import com.ctl.ecaps.serviceobject.UserPictureSO;
import com.ctl.ecaps.serviceobject.UserSO;
import com.ctl.ecaps.serviceobject.UsernameCheckResultSO;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "UserAdminService", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
@XmlSeeAlso({
    com.ctl.ecaps.exceptions.ObjectFactory.class,
    com.ctl.ecaps.service.useradmin.ObjectFactory.class,
    com.ctl.ecaps.serviceobject.ObjectFactory.class
})
public interface UserAdminService {


    /**
     * 
     * @param userId
     * @return
     *     returns com.ctl.ecaps.serviceobject.UserSO
     * @throws ServiceSystemException
     */
    @WebMethod
    @WebResult(targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
    @RequestWrapper(localName = "getUserById", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.GetUserById")
    @ResponseWrapper(localName = "getUserByIdResponse", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.GetUserByIdResponse")
    public UserSO getUserById(
        @WebParam(name = "userId", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        long userId)
        throws ServiceSystemException
    ;

    /**
     * 
     * @param emailAddress
     * @return
     *     returns java.util.List<com.ctl.ecaps.serviceobject.UserSO>
     * @throws ServiceValidationException
     * @throws ServiceSystemException
     */
    @WebMethod
    @WebResult(targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
    @RequestWrapper(localName = "getUsersByEmail", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.GetUsersByEmail")
    @ResponseWrapper(localName = "getUsersByEmailResponse", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.GetUsersByEmailResponse")
    public List<UserSO> getUsersByEmail(
        @WebParam(name = "emailAddress", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        String emailAddress)
        throws ServiceSystemException, ServiceValidationException
    ;

    /**
     * 
     * @param portalSiteId
     * @param origUserId
     * @param enterpriseId
     * @param userId
     * @param fromEnterpriseId
     * @throws ServiceValidationException
     * @throws ServiceAuthenticationException
     * @throws ServiceSystemException
     */
    @WebMethod
    @RequestWrapper(localName = "userEnterpriseSelectionEvent", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.UserEnterpriseSelectionEvent")
    @ResponseWrapper(localName = "userEnterpriseSelectionEventResponse", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.UserEnterpriseSelectionEventResponse")
    public void userEnterpriseSelectionEvent(
        @WebParam(name = "portalSiteId", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        String portalSiteId,
        @WebParam(name = "origUserId", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        long origUserId,
        @WebParam(name = "userId", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        long userId,
        @WebParam(name = "enterpriseId", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        long enterpriseId,
        @WebParam(name = "fromEnterpriseId", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        Long fromEnterpriseId)
        throws ServiceAuthenticationException, ServiceSystemException, ServiceValidationException
    ;

    /**
     * 
     * @param enterpriseAlias
     * @param userId
     * @return
     *     returns java.lang.String
     * @throws ServiceValidationException
     * @throws ServiceAuthenticationException
     * @throws ServiceSystemException
     */
    @WebMethod
    @WebResult(targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
    @RequestWrapper(localName = "updateEnterpriseAlias", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.UpdateEnterpriseAlias")
    @ResponseWrapper(localName = "updateEnterpriseAliasResponse", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.UpdateEnterpriseAliasResponse")
    public String updateEnterpriseAlias(
        @WebParam(name = "userId", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        long userId,
        @WebParam(name = "enterpriseAlias", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        List<EnterpriseAliasSO> enterpriseAlias)
        throws ServiceAuthenticationException, ServiceSystemException, ServiceValidationException
    ;

    /**
     * 
     * @param accountId
     * @param accountSystemCode
     * @return
     *     returns java.util.List<com.ctl.ecaps.serviceobject.UserSO>
     * @throws ServiceSystemException
     */
    @WebMethod
    @WebResult(targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
    @RequestWrapper(localName = "getUsersByAccount", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.GetUsersByAccount")
    @ResponseWrapper(localName = "getUsersByAccountResponse", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.GetUsersByAccountResponse")
    public List<UserSO> getUsersByAccount(
        @WebParam(name = "accountId", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        String accountId,
        @WebParam(name = "accountSystemCode", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        String accountSystemCode)
        throws ServiceSystemException
    ;

    /**
     * 
     * @param enterpriseId
     * @param userId
     * @throws ServiceValidationException
     * @throws ServiceAuthenticationException
     * @throws ServiceAuthorizationException
     * @throws ServiceSystemException
     */
    @WebMethod
    @RequestWrapper(localName = "setDefaultEnterprise", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.SetDefaultEnterprise")
    @ResponseWrapper(localName = "setDefaultEnterpriseResponse", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.SetDefaultEnterpriseResponse")
    public void setDefaultEnterprise(
        @WebParam(name = "userId", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        long userId,
        @WebParam(name = "enterpriseId", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        Long enterpriseId)
        throws ServiceAuthenticationException, ServiceAuthorizationException, ServiceSystemException, ServiceValidationException
    ;

    /**
     * 
     * @param userId
     * @return
     *     returns com.ctl.ecaps.serviceobject.UserPictureSO
     * @throws ServiceValidationException
     * @throws ServiceSystemException
     */
    @WebMethod
    @WebResult(targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
    @RequestWrapper(localName = "getUserProfilePicture", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.GetUserProfilePicture")
    @ResponseWrapper(localName = "getUserProfilePictureResponse", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.GetUserProfilePictureResponse")
    public UserPictureSO getUserProfilePicture(
        @WebParam(name = "userId", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        long userId)
        throws ServiceSystemException, ServiceValidationException
    ;

    /**
     * 
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
    @RequestWrapper(localName = "ping", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.Ping")
    @ResponseWrapper(localName = "pingResponse", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.PingResponse")
    public boolean ping();

    /**
     * 
     * @param realm
     * @param username
     * @return
     *     returns com.ctl.ecaps.serviceobject.UserSO
     * @throws ServiceSystemException
     */
    @WebMethod
    @WebResult(targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
    @RequestWrapper(localName = "getUserByUsername", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.GetUserByUsername")
    @ResponseWrapper(localName = "getUserByUsernameResponse", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.GetUserByUsernameResponse")
    public UserSO getUserByUsername(
        @WebParam(name = "username", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        String username,
        @WebParam(name = "realm", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        String realm)
        throws ServiceSystemException
    ;

    /**
     * 
     * @param realm
     * @param username
     * @return
     *     returns com.ctl.ecaps.serviceobject.UserEnterpriseDataSO
     * @throws ServiceValidationException
     * @throws ServiceAuthenticationException
     * @throws ServiceSystemException
     */
    @WebMethod
    @WebResult(targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
    @RequestWrapper(localName = "getUserEnterpriseData", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.GetUserEnterpriseData")
    @ResponseWrapper(localName = "getUserEnterpriseDataResponse", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.GetUserEnterpriseDataResponse")
    public UserEnterpriseDataSO getUserEnterpriseData(
        @WebParam(name = "username", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        String username,
        @WebParam(name = "realm", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        String realm)
        throws ServiceAuthenticationException, ServiceSystemException, ServiceValidationException
    ;

    /**
     * 
     * @param enterpriseId
     * @return
     *     returns java.util.List<com.ctl.ecaps.serviceobject.UserSO>
     * @throws ServiceSystemException
     */
    @WebMethod
    @WebResult(targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
    @RequestWrapper(localName = "getUsers", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.GetUsers")
    @ResponseWrapper(localName = "getUsersResponse", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.GetUsersResponse")
    public List<UserSO> getUsers(
        @WebParam(name = "enterpriseId", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        long enterpriseId)
        throws ServiceSystemException
    ;

    /**
     * 
     * @param enterpriseId
     * @return
     *     returns int
     * @throws ServiceValidationException
     * @throws ServiceAuthenticationException
     * @throws ServiceAuthorizationException
     * @throws ServiceSystemException
     */
    @WebMethod
    @WebResult(targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
    @RequestWrapper(localName = "removeAllUsersFromEnterprise", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.RemoveAllUsersFromEnterprise")
    @ResponseWrapper(localName = "removeAllUsersFromEnterpriseResponse", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.RemoveAllUsersFromEnterpriseResponse")
    public int removeAllUsersFromEnterprise(
        @WebParam(name = "enterpriseId", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        long enterpriseId)
        throws ServiceAuthenticationException, ServiceAuthorizationException, ServiceSystemException, ServiceValidationException
    ;

    /**
     * 
     * @param userId
     * @return
     *     returns java.util.List<com.ctl.ecaps.serviceobject.EnterpriseSO>
     * @throws ServiceSystemException
     */
    @WebMethod
    @WebResult(targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
    @RequestWrapper(localName = "getUserEnterprises", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.GetUserEnterprises")
    @ResponseWrapper(localName = "getUserEnterprisesResponse", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.GetUserEnterprisesResponse")
    public List<EnterpriseSO> getUserEnterprises(
        @WebParam(name = "userId", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        long userId)
        throws ServiceSystemException
    ;

    /**
     * 
     * @param alternativeNumber
     * @param username
     * @return
     *     returns com.ctl.ecaps.serviceobject.UsernameCheckResultSO
     * @throws ServiceValidationException
     * @throws ServiceSystemException
     */
    @WebMethod
    @WebResult(targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
    @RequestWrapper(localName = "checkUsernameAvailability", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.CheckUsernameAvailability")
    @ResponseWrapper(localName = "checkUsernameAvailabilityResponse", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.CheckUsernameAvailabilityResponse")
    public UsernameCheckResultSO checkUsernameAvailability(
        @WebParam(name = "username", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        String username,
        @WebParam(name = "alternativeNumber", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        int alternativeNumber)
        throws ServiceSystemException, ServiceValidationException
    ;

    /**
     * 
     * @param user
     * @throws ServiceValidationException
     * @throws ServiceAuthenticationException
     * @throws ServiceAuthorizationException
     * @throws ServiceSystemException
     */
    @WebMethod
    @RequestWrapper(localName = "updateUser", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.UpdateUser")
    @ResponseWrapper(localName = "updateUserResponse", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.UpdateUserResponse")
    public void updateUser(
        @WebParam(name = "user", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        UserSO user)
        throws ServiceAuthenticationException, ServiceAuthorizationException, ServiceSystemException, ServiceValidationException
    ;

    /**
     * 
     * @param userId
     * @param picture
     * @throws ServiceValidationException
     * @throws ServiceAuthenticationException
     * @throws ServiceAuthorizationException
     * @throws ServiceSystemException
     */
    @WebMethod
    @RequestWrapper(localName = "updateUserPicture", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.UpdateUserPicture")
    @ResponseWrapper(localName = "updateUserPictureResponse", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.UpdateUserPictureResponse")
    public void updateUserPicture(
        @WebParam(name = "userId", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        long userId,
        @WebParam(name = "picture", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        byte[] picture)
        throws ServiceAuthenticationException, ServiceAuthorizationException, ServiceSystemException, ServiceValidationException
    ;

    /**
     * 
     * @param accountId
     * @param groupName
     * @param accountSystemCode
     * @return
     *     returns java.util.List<com.ctl.ecaps.serviceobject.UserSO>
     * @throws ServiceSystemException
     */
    @WebMethod
    @WebResult(targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
    @RequestWrapper(localName = "getUsersByAccountAndGroup", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.GetUsersByAccountAndGroup")
    @ResponseWrapper(localName = "getUsersByAccountAndGroupResponse", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.GetUsersByAccountAndGroupResponse")
    public List<UserSO> getUsersByAccountAndGroup(
        @WebParam(name = "accountId", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        String accountId,
        @WebParam(name = "accountSystemCode", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        String accountSystemCode,
        @WebParam(name = "groupName", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        String groupName)
        throws ServiceSystemException
    ;

    /**
     * 
     * @param userCheckRequest
     * @return
     *     returns java.util.List<com.ctl.ecaps.serviceobject.UserInfoSO>
     * @throws ServiceValidationException
     * @throws ServiceSystemException
     */
    @WebMethod
    @WebResult(targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
    @RequestWrapper(localName = "checkForUser", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.CheckForUser")
    @ResponseWrapper(localName = "checkForUserResponse", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.CheckForUserResponse")
    public List<UserInfoSO> checkForUser(
        @WebParam(name = "userCheckRequest", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        UserCheckRequestSO userCheckRequest)
        throws ServiceSystemException, ServiceValidationException
    ;

    /**
     * 
     * @param enterpriseId
     * @param userId
     * @throws ServiceValidationException
     * @throws ServiceAuthenticationException
     * @throws ServiceSystemException
     */
    @WebMethod
    @RequestWrapper(localName = "addUserToEnterprise", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.AddUserToEnterprise")
    @ResponseWrapper(localName = "addUserToEnterpriseResponse", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.AddUserToEnterpriseResponse")
    public void addUserToEnterprise(
        @WebParam(name = "userId", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        long userId,
        @WebParam(name = "enterpriseId", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        long enterpriseId)
        throws ServiceAuthenticationException, ServiceSystemException, ServiceValidationException
    ;

    /**
     * 
     * @param filterCriteria
     * @param enterpriseId
     * @return
     *     returns java.util.List<com.ctl.ecaps.serviceobject.UserDetailSO>
     * @throws ServiceValidationException
     * @throws ServiceSystemException
     */
    @WebMethod
    @WebResult(targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
    @RequestWrapper(localName = "getFilteredUsers", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.GetFilteredUsers")
    @ResponseWrapper(localName = "getFilteredUsersResponse", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.GetFilteredUsersResponse")
    public List<UserDetailSO> getFilteredUsers(
        @WebParam(name = "enterpriseId", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        long enterpriseId,
        @WebParam(name = "filterCriteria", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        UserFilterCriteriaSO filterCriteria)
        throws ServiceSystemException, ServiceValidationException
    ;

    /**
     * 
     * @param enterpriseId
     * @return
     *     returns java.util.List<com.ctl.ecaps.serviceobject.UserSO>
     * @throws ServiceValidationException
     * @throws ServiceSystemException
     */
    @WebMethod
    @WebResult(targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
    @RequestWrapper(localName = "getCSAUsers", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.GetCSAUsers")
    @ResponseWrapper(localName = "getCSAUsersResponse", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.GetCSAUsersResponse")
    public List<UserSO> getCSAUsers(
        @WebParam(name = "enterpriseId", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        long enterpriseId)
        throws ServiceSystemException, ServiceValidationException
    ;

    /**
     * 
     * @param enterpriseId
     * @return
     *     returns java.util.List<com.ctl.ecaps.serviceobject.UserPictureSO>
     * @throws ServiceValidationException
     * @throws ServiceSystemException
     */
    @WebMethod
    @WebResult(targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
    @RequestWrapper(localName = "getAllUserProfilePictures", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.GetAllUserProfilePictures")
    @ResponseWrapper(localName = "getAllUserProfilePicturesResponse", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.GetAllUserProfilePicturesResponse")
    public List<UserPictureSO> getAllUserProfilePictures(
        @WebParam(name = "enterpriseId", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        long enterpriseId)
        throws ServiceSystemException, ServiceValidationException
    ;

    /**
     * 
     * @param realm
     * @param username
     * @return
     *     returns java.lang.String
     * @throws ServiceSystemException
     */
    @WebMethod
    @WebResult(targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
    @RequestWrapper(localName = "getUserChannel", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.GetUserChannel")
    @ResponseWrapper(localName = "getUserChannelResponse", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.GetUserChannelResponse")
    public String getUserChannel(
        @WebParam(name = "username", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        String username,
        @WebParam(name = "realm", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        String realm)
        throws ServiceSystemException
    ;

    /**
     * 
     * @param enterpriseId
     * @param userId
     * @throws ServiceValidationException
     * @throws ServiceAuthenticationException
     * @throws ServiceAuthorizationException
     * @throws ServiceSystemException
     */
    @WebMethod
    @RequestWrapper(localName = "removeUserFromEnterprise", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.RemoveUserFromEnterprise")
    @ResponseWrapper(localName = "removeUserFromEnterpriseResponse", targetNamespace = "http://ecaps.ctl.com/service/userAdmin", className = "com.ctl.ecaps.service.useradmin.RemoveUserFromEnterpriseResponse")
    public void removeUserFromEnterprise(
        @WebParam(name = "userId", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        long userId,
        @WebParam(name = "enterpriseId", targetNamespace = "http://ecaps.ctl.com/service/userAdmin")
        long enterpriseId)
        throws ServiceAuthenticationException, ServiceAuthorizationException, ServiceSystemException, ServiceValidationException
    ;

}
