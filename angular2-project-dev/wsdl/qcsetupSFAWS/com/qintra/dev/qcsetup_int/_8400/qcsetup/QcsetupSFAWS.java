
package com.qintra.dev.qcsetup_int._8400.qcsetup;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "qcsetupSFAWS", targetNamespace = "http://qcsetup-int.dev.qintra.com:8400/qcsetup", wsdlLocation = "file:/C:/1PCenturyLink/WSDLs/Real-WSDLs/qcsetupSFAWS.xml")
public class QcsetupSFAWS
    extends Service
{

    private final static URL QCSETUPSFAWS_WSDL_LOCATION;
    private final static WebServiceException QCSETUPSFAWS_EXCEPTION;
    private final static QName QCSETUPSFAWS_QNAME = new QName("http://qcsetup-int.dev.qintra.com:8400/qcsetup", "qcsetupSFAWS");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/C:/1PCenturyLink/WSDLs/Real-WSDLs/qcsetupSFAWS.xml");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        QCSETUPSFAWS_WSDL_LOCATION = url;
        QCSETUPSFAWS_EXCEPTION = e;
    }

    public QcsetupSFAWS() {
        super(__getWsdlLocation(), QCSETUPSFAWS_QNAME);
    }

    public QcsetupSFAWS(WebServiceFeature... features) {
        super(__getWsdlLocation(), QCSETUPSFAWS_QNAME, features);
    }

    public QcsetupSFAWS(URL wsdlLocation) {
        super(wsdlLocation, QCSETUPSFAWS_QNAME);
    }

    public QcsetupSFAWS(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, QCSETUPSFAWS_QNAME, features);
    }

    public QcsetupSFAWS(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public QcsetupSFAWS(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns QcsetupSFAWSPort
     */
    @WebEndpoint(name = "qcsetupSFAWSPort")
    public QcsetupSFAWSPort getQcsetupSFAWSPort() {
        return super.getPort(new QName("http://qcsetup-int.dev.qintra.com:8400/qcsetup", "qcsetupSFAWSPort"), QcsetupSFAWSPort.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns QcsetupSFAWSPort
     */
    @WebEndpoint(name = "qcsetupSFAWSPort")
    public QcsetupSFAWSPort getQcsetupSFAWSPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://qcsetup-int.dev.qintra.com:8400/qcsetup", "qcsetupSFAWSPort"), QcsetupSFAWSPort.class, features);
    }

    private static URL __getWsdlLocation() {
        if (QCSETUPSFAWS_EXCEPTION!= null) {
            throw QCSETUPSFAWS_EXCEPTION;
        }
        return QCSETUPSFAWS_WSDL_LOCATION;
    }

}
